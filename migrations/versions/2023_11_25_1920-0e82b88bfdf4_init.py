"""Init

Revision ID: 0e82b88bfdf4
Revises:
Create Date: 2023-11-25 19:20:53.643077

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0e82b88bfdf4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:

    # Create table brands
    op.create_table(
        'brands',
        sa.Column(
            'id',
            sa.Integer(),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            'name',
            sa.String(length=255),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            'id',
            name='brands__id__pkey',
        ),
        sa.UniqueConstraint(
            'name',
            name='brands__name__unique',
        ),
        sa.CheckConstraint(
            sqltext='LENGTH(name) > 2',
            name='categories__name__check',
        ),
    )

    # Create table categories
    op.create_table(
        'categories',
        sa.Column(
            'id',
            sa.Integer(),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            'site_id',
            sa.Integer(),
            nullable=False,
        ),
        sa.Column(
            'slug',
            sa.String(length=255),
            nullable=False,
        ),
        sa.Column(
            'name',
            sa.String(length=255),
            nullable=False,
        ),
        sa.Column(
            'parent_id',
            sa.Integer(),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            'id',
            name='categories__id__pkey',
        ),
        sa.UniqueConstraint(
            'name', 'parent_id',
            name='categories__name__parent_id__unique',
        ),
        sa.CheckConstraint(
            sqltext='LENGTH(name) > 2',
            name='categories__name__check',
        ),
        sa.ForeignKeyConstraint(
            columns=['parent_id'],
            refcolumns=['categories.id'],
            name='categories__parent_id__fkey',
            ondelete='RESTRICT',
        ),
    )

    # Create table products
    op.create_table(
        'products',
        sa.Column(
            'id',
            sa.Integer(),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            'created_at',
            sa.TIMESTAMP(),
            server_default=sa.text('(CURRENT_TIMESTAMP)'),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.TIMESTAMP(),
            server_default=sa.text('(CURRENT_TIMESTAMP)'),
            nullable=False,
        ),
        sa.Column(
            'site_id',
            sa.String(length=255),
            nullable=False,
        ),
        sa.Column(
            'article',
            sa.String(length=255),
            nullable=False,
        ),
        sa.Column(
            'slug',
            sa.String(length=255),
            nullable=False,
        ),
        sa.Column(
            'name',
            sa.String(length=255),
            nullable=False,
        ),
        sa.Column(
            'price',
            sa.Integer(),
            nullable=False,
        ),
        sa.Column(
            'old_price',
            sa.Integer(),
            nullable=True,
        ),
        sa.Column(
            'category_id',
            sa.Integer(),
            nullable=False,
        ),
        sa.Column(
            'brand_id',
            sa.Integer(),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            'id',
            name='products__id__pkey',
        ),
        sa.UniqueConstraint(
            'site_id',
            name='products__site_id__unique',
        ),
        sa.CheckConstraint(
            sqltext='LENGTH(name) > 2',
            name='categories__name__check',
        ),
        sa.ForeignKeyConstraint(
            columns=['brand_id'],
            refcolumns=['brands.id'],
            ondelete='RESTRICT',
        ),
        sa.ForeignKeyConstraint(
            columns=['category_id'],
            refcolumns=['categories.id'],
            ondelete='RESTRICT',
        ),
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('products')
    op.drop_table('categories')
    op.drop_table('brands')
    # ### end Alembic commands ###
